@model IEnumerable<BanHang.Models.Category>

@{
    ViewData["Title"] = "Quản lý danh mục";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="container-fluid">
    <div class="row mb-4">
        <div class="col-md-6">
            <h2 class="text-primary">
                <i class="fas fa-folder"></i> Quản lý danh mục
            </h2>
            <p class="text-muted">Danh sách tất cả danh mục sản phẩm trong hệ thống</p>
        </div>
        <div class="col-md-6 text-end">
            <!-- SỬA NÚT THÊM DANH MỤC - DÙNG HREF TRỰC TIẾP -->
            <a href="/Admin/Categories/Add" class="btn btn-success btn-lg">
                <i class="fas fa-plus"></i> Thêm danh mục mới
            </a>
        </div>
    </div>

    <!-- Thống kê nhanh -->
    <div class="row mb-4">
        <div class="col-md-4">
            <div class="card bg-primary text-white">
                <div class="card-body">
                    <div class="d-flex justify-content-between">
                        <div>
                            <h5>Tổng danh mục</h5>
                            <h3>@Model.Count()</h3>
                        </div>
                        <div class="align-self-center">
                            <i class="fas fa-folder fa-2x"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-md-4">
            <div class="card bg-success text-white">
                <div class="card-body">
                    <div class="d-flex justify-content-between">
                        <div>
                            <h5>Có sản phẩm</h5>
                            <h3>@Model.Count(c => c.Products != null && c.Products.Any())</h3>
                        </div>
                        <div class="align-self-center">
                            <i class="fas fa-check fa-2x"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-md-4">
            <div class="card bg-info text-white">
                <div class="card-body">
                    <div class="d-flex justify-content-between">
                        <div>
                            <h5>Tổng sản phẩm</h5>
                            <h3>@Model.SelectMany(c => c.Products ?? new List<BanHang.Models.Product>()).Count()</h3>
                        </div>
                        <div class="align-self-center">
                            <i class="fas fa-box fa-2x"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Bộ lọc và tìm kiếm -->
    <div class="card mb-4">
        <div class="card-header">
            <h5><i class="fas fa-search"></i> Tìm kiếm danh mục</h5>
        </div>
        <div class="card-body">
            <div class="row">
                <div class="col-md-6">
                    <input type="text" id="searchInput" class="form-control" placeholder="Tìm kiếm theo tên danh mục...">
                </div>
                <div class="col-md-3">
                    <select id="statusFilter" class="form-select">
                        <option value="">Tất cả trạng thái</option>
                        <option value="has-products">Có sản phẩm</option>
                        <option value="no-products">Chưa có sản phẩm</option>
                    </select>
                </div>
                <div class="col-md-3">
                    <button type="button" class="btn btn-outline-secondary w-100" onclick="clearFilters()">
                        <i class="fas fa-times"></i> Xóa bộ lọc
                    </button>
                </div>
            </div>
        </div>
    </div>

    <!-- Bảng danh sách danh mục -->
    <div class="card">
        <div class="card-header">
            <h5><i class="fas fa-list"></i> Danh sách danh mục</h5>
        </div>
        <div class="card-body">
            @if (!Model.Any())
            {
                <div class="text-center py-5">
                    <i class="fas fa-folder-open fa-3x text-muted mb-3"></i>
                    <h4 class="text-muted">Chưa có danh mục nào</h4>
                    <p class="text-muted">Hãy thêm danh mục đầu tiên của bạn!</p>
                    <!-- SỬA NÚT THÊM DANH MỤC TRONG PHẦN EMPTY STATE -->
                    <a href="/Admin/Categories/Add" class="btn btn-primary">
                        <i class="fas fa-plus"></i> Thêm danh mục
                    </a>
                </div>
            }
            else
            {
                <div class="table-responsive">
                    <table class="table table-hover" id="categoriesTable">
                        <thead class="table-dark">
                            <tr>
                                <th>
                                    <i class="fas fa-hashtag"></i> ID
                                </th>
                                <th>
                                    <i class="fas fa-tag"></i>
                                    @Html.DisplayNameFor(model => model.Name)
                                </th>
                                <th>
                                    <i class="fas fa-box"></i> Số sản phẩm
                                </th>
                                <th>
                                    <i class="fas fa-info-circle"></i> Trạng thái
                                </th>
                                <th width="280" class="text-center">
                                    <i class="fas fa-tools"></i> Thao tác
                                </th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var item in Model)
                            {
                                <tr data-category-name="@item.Name.ToLower()"
                                    data-has-products="@((item.Products != null && item.Products.Any()).ToString().ToLower())">
                                    <td>
                                        <code>@item.Id</code>
                                    </td>
                                    <td>
                                        <strong>@Html.DisplayFor(modelItem => item.Name)</strong>
                                    </td>
                                    <td>
                                        @if (item.Products != null && item.Products.Any())
                                        {
                                            <span class="badge bg-success">@item.Products.Count sản phẩm</span>
                                        }
                                        else
                                        {
                                            <span class="badge bg-secondary">0 sản phẩm</span>
                                        }
                                    </td>
                                    <td>
                                        @if (item.Products != null && item.Products.Any())
                                        {
                                            <span class="badge bg-success">
                                                <i class="fas fa-check"></i> Có sản phẩm
                                            </span>
                                        }
                                        else
                                        {
                                            <span class="badge bg-warning text-dark">
                                                <i class="fas fa-exclamation"></i> Trống
                                            </span>
                                        }
                                    </td>
                                    <td>
                                        <div class="btn-group" role="group">
                                            <!-- Nút xem chi tiết -->
                                            <a href="/Admin/Categories/Display/@item.Id"
                                               class="btn btn-info btn-sm action-btn"
                                               title="Xem chi tiết danh mục"
                                               data-bs-toggle="tooltip">
                                                <i class="fas fa-eye me-1"></i>
                                                <span class="d-none d-md-inline">Chi tiết</span>
                                            </a>

                                            <!-- Nút chỉnh sửa -->
                                            <a href="/Admin/Categories/Update/@item.Id"
                                               class="btn btn-warning btn-sm action-btn"
                                               title="Chỉnh sửa danh mục"
                                               data-bs-toggle="tooltip">
                                                <i class="fas fa-edit me-1"></i>
                                                <span class="d-none d-md-inline">Sửa</span>
                                            </a>

                                            <!-- Nút xóa -->
                                            <a href="/Admin/Categories/Delete/@item.Id"
                                               class="btn btn-danger btn-sm action-btn"
                                               title="Xóa danh mục"
                                               data-bs-toggle="tooltip"
                                               onclick="return confirm('Bạn có chắc chắn muốn xóa danh mục này?')">
                                                <i class="fas fa-trash me-1"></i>
                                                <span class="d-none d-md-inline">Xóa</span>
                                            </a>
                                        </div>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            }
        </div>
    </div>
</div>

<style>
    .card {
        box-shadow: 0 0.125rem 0.25rem rgba(0, 0, 0, 0.075);
        border: 1px solid rgba(0, 0, 0, 0.125);
    }

    .table th {
        border-top: none;
        font-weight: 600;
        white-space: nowrap;
    }

    .btn-group .btn {
        margin-right: 2px;
    }

    .badge {
        font-size: 0.75em;
    }

    .simple-link {
        transition: all 0.2s ease;
    }

        .simple-link:hover {
            transform: translateY(-1px);
        }

    /* STYLES CHO CÁC NÚT THAO TÁC */
    .action-btn {
        transition: all 0.3s ease;
        position: relative;
        overflow: hidden;
        white-space: nowrap;
        min-width: 45px;
    }

        .action-btn:hover {
            transform: translateY(-2px);
            box-shadow: 0 4px 8px rgba(0,0,0,0.2);
        }

        .action-btn:active {
            transform: translateY(0);
        }

        /* Hiệu ứng ripple khi click */
        .action-btn::before {
            content: '';
            position: absolute;
            top: 50%;
            left: 50%;
            width: 0;
            height: 0;
            border-radius: 50%;
            background: rgba(255,255,255,0.5);
            transform: translate(-50%, -50%);
            transition: width 0.3s, height 0.3s;
        }

        .action-btn:active::before {
            width: 100px;
            height: 100px;
        }

    /* Màu sắc cho từng loại nút */
    .btn-info.action-btn {
        background: linear-gradient(45deg, #17a2b8, #20c997);
        border: none;
        color: white;
    }

        .btn-info.action-btn:hover {
            background: linear-gradient(45deg, #138496, #1e7e34);
        }

    .btn-warning.action-btn {
        background: linear-gradient(45deg, #ffc107, #fd7e14);
        border: none;
        color: #212529;
        font-weight: 600;
    }

        .btn-warning.action-btn:hover {
            background: linear-gradient(45deg, #e0a800, #e8590c);
            color: white;
        }

    .btn-danger.action-btn {
        background: linear-gradient(45deg, #dc3545, #e74c3c);
        border: none;
        color: white;
    }

        .btn-danger.action-btn:hover {
            background: linear-gradient(45deg, #c82333, #c0392b);
        }


</style>

<script>
    // ĐƠN GIẢN HÓA JAVASCRIPT - XÓA CÁC FUNCTION DEBUG
    document.addEventListener('DOMContentLoaded', function() {
        console.log('🔍 Categories page loaded');

        const searchInput = document.getElementById('searchInput');
        const statusFilter = document.getElementById('statusFilter');
        const table = document.getElementById('categoriesTable');

        // Kiểm tra elements tồn tại
        if (!searchInput || !statusFilter || !table) {
            console.log('⚠️ Some elements not found');
            return;
        }

        function filterTable() {
            const searchTerm = searchInput.value.toLowerCase();
            const selectedStatus = statusFilter.value;
            const tbody = table.getElementsByTagName('tbody')[0];

            if (!tbody) return;

            const rows = tbody.getElementsByTagName('tr');

            for (let i = 0; i < rows.length; i++) {
                const row = rows[i];
                const categoryName = row.getAttribute('data-category-name') || '';
                const hasProducts = row.getAttribute('data-has-products') === 'true';

                let showRow = true;

                // Lọc theo tên
                if (searchTerm && !categoryName.includes(searchTerm)) {
                    showRow = false;
                }

                // Lọc theo trạng thái
                if (selectedStatus === 'has-products' && !hasProducts) {
                    showRow = false;
                }
                if (selectedStatus === 'no-products' && hasProducts) {
                    showRow = false;
                }

                row.style.display = showRow ? '' : 'none';
            }
        }

        // Gắn sự kiện
        if (searchInput) {
            searchInput.addEventListener('input', filterTable);
        }

        if (statusFilter) {
            statusFilter.addEventListener('change', filterTable);
        }

        console.log('✅ Filter functions attached');

        // THÊM FUNCTION TEST NÚT ADD
        const addButton = document.querySelector('a[href="/Admin/Categories/Add"]');
        if (addButton) {
            console.log('✅ Add button found:', addButton.href);

            // Test click event
            addButton.addEventListener('click', function(e) {
                console.log('🔥 Add button clicked! URL:', this.href);
            });
        } else {
            console.log('❌ Add button NOT found');
        }
    });

    function clearFilters() {
        const searchInput = document.getElementById('searchInput');
        const statusFilter = document.getElementById('statusFilter');
        const table = document.getElementById('categoriesTable');

        if (searchInput) searchInput.value = '';
        if (statusFilter) statusFilter.selectedIndex = 0;

        if (table) {
            const tbody = table.getElementsByTagName('tbody')[0];
            if (tbody) {
                const rows = tbody.getElementsByTagName('tr');
                for (let i = 0; i < rows.length; i++) {
                    rows[i].style.display = '';
                }
            }
        }

        console.log('🔄 Filters cleared');
    }

    // FUNCTION TEST URL TRỰC TIẾP
    function testAddURL() {
        console.log('🧪 Testing Add URL...');
        window.location.href = '/Admin/Categories/Add';
    }
</script>